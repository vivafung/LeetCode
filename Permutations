Given a collection of numbers, return all possible permutations.

For example,
[1,2,3] have the following permutations:
[1,2,3], [1,3,2], [2,1,3], [2,3,1], [3,1,2], and [3,2,1].



class Solution {
public:
    vector<vector<int> > permute(vector<int> &num) 
    {
        vector<vector<int>> vec;
        int n=num.size();
        perm(num, 0);
        return vec;
    }
    
    void perm(vector<int> &num, int i) 
    {
        vector<vector<int>> vec;
        int N;
        if(i==N)
        {
            vec.push_back(num);
        }
        
        for(int j = i; j<N; j++)
        {
            swap(num[i], num[j]);
            perm(num, i+1);
            swap(num[j], num[i]);
        }
    
    }
};
