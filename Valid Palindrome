Given a string, determine if it is a palindrome, considering only alphanumeric characters and ignoring cases.

For example,
"A man, a plan, a canal: Panama" is a palindrome.
"race a car" is not a palindrome.

Note:
Have you consider that the string might be empty? This is a good question to ask during an interview.

For the purpose of this problem, we define empty string as valid palindrome.




class Solution {
public:
    //check the char is number, upper case, lower case
    bool checkChar(char &ch)
    {
        if(ch >= '0' && ch <= '9')
          {return true;}
          
        else if(ch >= 'a' && ch <= 'z')
          {return true;}
          
        else if(ch >= 'A' && ch <= 'Z')
        {
            //if char is upper case, convert into lower case
            ch += 32;
            return true;
        }
        return false;
    }
    
    
    bool isPalindrome(string s) {
        int n = s.length();
        if(n == 0 || n == 1)
        {return true;}
        string str = " ";
        
        
        //delete the space from string
        for(int i = 0; i < n; i++)
        {
            if(checkChar(s[i]))
            {
                str += s[i];
            }
        }
        //refresh the length of string
        n = s.length();
        int mid = n/2;
        
        for(int i = 0; i < mid; i++)
          for(int j  = n-1; j > i; j--)
            {
                if(s[i] == s[j])
                {return true;}
                else
                {return false;}
            }
            //Doesn't work if there are special character such as . ! $
    }
};
