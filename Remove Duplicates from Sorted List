//Given a sorted linked list, delete all duplicates such that each element 

appear only once.

//For example,
//Given 1->1->2, return 1->2.
//Given 1->1->2->3->3, return 1->2->3.
/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int 

val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * 

};
 */
class Solution {
public:
    ListNode *deleteDuplicates(ListNode *head) 

{
        if(head == NULL || head->next == NULL)
        {return head;}
      

  
        ListNode* ptr = head;
        ListNode* nptr = head->next;
        
        while(nptr != NULL)
        {
            if(nptr->val != ptr->val)
  

          {
                ptr = nptr;
                nptr = nptr->next;
   

             continue;
            }
            while(nptr->next != NULL && 

nptr->val == ptr->val)
            {
                nptr = nptr->next;
      

      }
          
            ptr->next = nptr->next;
            nptr = 

ptr->next;
        }
        return head;
    }
};
