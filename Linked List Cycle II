/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution 
{
public:
    ListNode *detectCycle(ListNode *head) 
    {
        ListNode* fast;
        ListNode* slow;
        if(*head == NULL)
        {reture NULL;}
        
        while(fast->next != NULL && fast->next->next != NUll)
        {
            fast = fast->next->next;  
            slow = slow->next;  
            if(slow == fast)
            {
                slow = head;
                while(fast != slow)
                {
                    fast = fast->next;  
                    slow = slow->next; 
                }
                return fast;
            }
        }
        return NULL;
    }
};
